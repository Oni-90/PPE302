# Generated by Django 4.0.10 on 2024-06-11 11:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(related_name='agent_groups', to='auth.group')),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
            },
        ),
        migrations.CreateModel(
            name='Census',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_dDate', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CensusForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_date', models.DateField()),
                ('information', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='censusForms', to='censusApp.agent')),
                ('census', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='censusForms', to='censusApp.census')),
            ],
        ),
        migrations.CreateModel(
            name='CensusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgriculturalCensus',
            fields=[
                ('censusform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='censusApp.censusform')),
                ('area_exploited', models.FloatField()),
                ('production_method', models.CharField(max_length=30)),
                ('number_of_workers', models.IntegerField()),
                ('number_of_cattle', models.IntegerField()),
                ('equipment_type', models.CharField(max_length=30)),
                ('agricultural_income', models.FloatField()),
            ],
            bases=('censusApp.censusform',),
        ),
        migrations.CreateModel(
            name='HousingCensus',
            fields=[
                ('censusform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='censusApp.censusform')),
                ('housing_size', models.CharField(max_length=10)),
                ('number_of_pieces', models.IntegerField()),
                ('construction_type', models.CharField(max_length=50)),
                ('public_service', models.CharField(max_length=100)),
                ('household_number', models.IntegerField()),
                ('household_relation', models.CharField(max_length=30)),
            ],
            bases=('censusApp.censusform',),
        ),
        migrations.CreateModel(
            name='PopulationCensus',
            fields=[
                ('censusform_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='censusApp.censusform')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('birth_place', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=10)),
                ('nationality', models.CharField(max_length=30)),
                ('profession', models.CharField(max_length=30)),
                ('marital_status', models.CharField(max_length=30)),
                ('education_level', models.CharField(max_length=30)),
                ('housing_type', models.CharField(max_length=30)),
                ('are_you_owner', models.BooleanField()),
            ],
            bases=('censusApp.censusform',),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(related_name='organisation_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='organisation_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Organisation',
                'verbose_name_plural': 'Organisations',
            },
        ),
        migrations.AddField(
            model_name='censusform',
            name='census_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='censusForms', to='censusApp.censustype'),
        ),
        migrations.AddField(
            model_name='agent',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='censusApp.organisation'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user_permissions',
            field=models.ManyToManyField(related_name='agent_user_permissions', to='auth.permission'),
        ),
    ]
